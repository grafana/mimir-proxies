version: "3.9"

services:
  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    pull_policy: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
    volumes:
      - ./config/grafana-provisioning-dashboards.yaml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ./config/grafana-provisioning-datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
      # Explicitly list the dashboards we want to show in the demo. We intentionally exclude dashboards that require
      # Kubernetes metrics (eg. resources or networking) and other services not available in the demo (eg. Grafana Loki).
      - ./dashboards/mimir-alertmanager.json:/var/lib/grafana/dashboards/mimir-alertmanager.json:ro
      - ./dashboards/mimir-compactor.json:/var/lib/grafana/dashboards/mimir-compactor.json:ro
      - ./dashboards/mimir-object-store.json:/var/lib/grafana/dashboards/mimir-object-store.json:ro
      - ./dashboards/mimir-overrides.json:/var/lib/grafana/dashboards/mimir-overrides.json:ro
      - ./dashboards/mimir-queries.json:/var/lib/grafana/dashboards/mimir-queries.json:ro
      - ./dashboards/mimir-reads.json:/var/lib/grafana/dashboards/mimir-reads.json:ro
      - ./dashboards/mimir-ruler.json:/var/lib/grafana/dashboards/mimir-ruler.json:ro
      - ./dashboards/mimir-tenants.json:/var/lib/grafana/dashboards/mimir-tenants.json:ro
      - ./dashboards/mimir-top-tenants.json:/var/lib/grafana/dashboards/mimir-top-tenants.json:ro
      - ./dashboards/mimir-writes.json:/var/lib/grafana/dashboards/mimir-writes.json:ro
    ports:
      - 9000:3000

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --log.level=error
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./config/rules.yaml:/etc/prometheus/rules.yaml
    depends_on: &depends_mimir
      server:
        condition: service_started

  load-balancer:
    image: nginx:latest
    container_name: load-balancer
    hostname: load-balancer
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: *depends_mimir
    ports:
      - 9009:9009

  server:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    depends_on:
      - minio
    deploy:
      mode: replicated
      replicas: 3
    volumes:
      - ./config/mimir.yaml:/etc/mimir.yaml
      - ./config/alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml

volumes:
  minio-data:

