version: "3.9"

include:
  - ./compose-grafana-mimir.yml

services:
  mimir-datadog-proxy: &mimir_proxy
    image: grafana/mimir-proxies:1.1.0-memcached
    container_name: mimir-datadog-proxy
    hostname: mimir-datadog-proxy
    environment:
      - PROXY_TYPE=datadog
      - PROXY_VERBOSITY=15
      - PROXY_ENTRY_SERVER=mimir
      - POXY_ENTRY_PORT=8080
    profiles: ["datadog"]
    depends_on: &mimir-playground
      grafana:
        condition: service_started
      mimir:
        condition: service_started

  debug-proxy:
    build:
      context: .
      dockerfile_inline:  |
        FROM golang:1.20.5-alpine
        RUN apk add bash git
        ENV CGO_ENABLED=0
        RUN go install -ldflags "-s -w -extldflags '-static'" github.com/go-delve/delve/cmd/dlv@latest
        ENV GO111MODULE=off
        ENV JAEGER_DISABLED=true
        CMD top
    container_name: mimir-debug-proxy
    hostname: mimir-debug-proxy
    environment:
      - PROXY_TYPE=datadog
      - PROXY_ENTRY_SERVER=mimir
      - PROXY_VERBOSITY=15
      - PROXY_MEMCACHE_SERVER="mimir-datadog-proxy:11211"
    volumes:
     - ../:/go/mimir-proxies
     - ./gogitconfig:/.gitconfig
    ports:
      - 4000:4000
    depends_on:
      mimir-datadog-proxy:
        condition: service_started
    profiles: ["testing"]

  mimir-graphite-proxy:
    <<: *mimir_proxy
    container_name: mimir-graphite-proxy
    hostname: mimir-graphite-proxy
    environment:
      - PROXY_TYPE=graphite
      - PROXY_ENTRY_SERVER=load-balancer
    profiles: ["graphite"]

  datadog:
    container_name: datadog
    image: gcr.io/datadoghq/agent:${DATADOG_AGENT_VERSION}
    pid: host
    environment:
     - DD_API_KEY=${DD_API_KEY}
     - DD_SITE=${DD_SITE}
     - DD_APM_ENABLED=true
       #- DD_APM_NON_LOCAL_TRAFFIC=true
     - DD_SYSTEM_PROBE_NETWORK_ENABLED=true
     - DD_PROCESS_AGENT_ENABLED=true
       #- DD_APM_RECEIVER_SOCKET=/opt/datadog/apm/inject/run/apm.socket
     - DD_DOGSTATSD_SOCKET=/opt/datadog/apm/inject/run/dsd.socket
     - DD_ADDITIONAL_ENDPOINTS=${DD_ADDITIONAL_ENDPOINTS}
     - DD_LOGS_ENABLED=true
     - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
     - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /opt/datadog/apm:/opt/datadog/apm
     - /proc/:/host/proc/:ro
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
     - /var/lib/docker/containers:/var/lib/docker/containers:ro
     - /etc/os-release:/host/etc/os-release:ro
     - /sys/kernel/debug:/sys/kernel/debug
     - ./config/datadog/datadog-docker.yaml:/etc/datadog-agent/datadog.yaml
    cap_add:
     - SYS_ADMIN
     - SYS_RESOURCE
     - SYS_PTRACE
     - NET_ADMIN
     - NET_BROADCAST
     - NET_RAW
     - IPC_LOCK
     - CHOWN
    security_opt:
     - apparmor:unconfined
    profiles: ["datadog"]
    depends_on:
      mimir-datadog-proxy:
        condition: service_started
